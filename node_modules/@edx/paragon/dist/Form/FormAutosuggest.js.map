{"version":3,"file":"FormAutosuggest.js","names":["React","useEffect","useState","PropTypes","useIntl","KeyboardArrowUp","KeyboardArrowDown","Icon","FormGroup","FormControl","FormControlFeedback","IconButton","Spinner","useArrowKeyNavigation","messages","FormAutosuggest","_ref","children","arrowKeyNavigationSelector","ignoredArrowKeysNames","screenReaderText","value","isLoading","errorMessageText","onChange","onSelected","helpMessage","props","_objectWithoutProperties","_excluded","intl","parentRef","selectors","ignoredKeys","isMenuClosed","setIsMenuClosed","state","setState","displayValue","errorMessage","dropDownItems","handleItemClick","e","onClick","clickedValue","currentTarget","prevState","_objectSpread","getItems","strToFind","arguments","length","undefined","childrenOpt","Children","map","child","_child$props","rest","_excluded2","cloneElement","filter","opt","toLowerCase","includes","handleExpand","newState","target","iconToggle","createElement","className","src","iconAs","size","variant","alt","formatMessage","iconButtonOpened","iconButtonClosed","handleClickOutside","current","contains","keyDownHandler","key","preventDefault","document","addEventListener","removeEventListener","setDisplayValue","itemValue","optValue","forEach","push","normalized","find","o","handleClick","handleOnChange","findStr","filteredItems","ref","isInvalid","_extends","toString","trailingElement","type","name","id","animation","defaultProps","role","floatingLabel","placeholder","readOnly","propTypes","string","arrayOf","bool","func","node"],"sources":["../../src/Form/FormAutosuggest.jsx"],"sourcesContent":["import React, {\n  useEffect, useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { KeyboardArrowUp, KeyboardArrowDown } from '../../icons';\nimport Icon from '../Icon';\nimport FormGroup from './FormGroup';\nimport FormControl from './FormControl';\nimport FormControlFeedback from './FormControlFeedback';\nimport IconButton from '../IconButton';\nimport Spinner from '../Spinner';\nimport useArrowKeyNavigation from '../hooks/useArrowKeyNavigation';\nimport messages from './messages';\n\nfunction FormAutosuggest({\n  children,\n  arrowKeyNavigationSelector,\n  ignoredArrowKeysNames,\n  screenReaderText,\n  value,\n  isLoading,\n  errorMessageText,\n  onChange,\n  onSelected,\n  helpMessage,\n  ...props\n}) {\n  const intl = useIntl();\n  const parentRef = useArrowKeyNavigation({\n    selectors: arrowKeyNavigationSelector,\n    ignoredKeys: ignoredArrowKeysNames,\n  });\n  const [isMenuClosed, setIsMenuClosed] = useState(true);\n  const [state, setState] = useState({\n    displayValue: value || '',\n    errorMessage: '',\n    dropDownItems: [],\n  });\n\n  const handleItemClick = (e, onClick) => {\n    const clickedValue = e.currentTarget.value;\n\n    if (onSelected && clickedValue !== value) {\n      onSelected(clickedValue);\n    }\n\n    setState(prevState => ({\n      ...prevState,\n      dropDownItems: [],\n      displayValue: clickedValue,\n    }));\n\n    setIsMenuClosed(true);\n\n    if (onClick) {\n      onClick(e);\n    }\n  };\n\n  function getItems(strToFind = '') {\n    let childrenOpt = React.Children.map(children, (child) => {\n      // eslint-disable-next-line no-shadow\n      const { children, onClick, ...rest } = child.props;\n\n      return React.cloneElement(child, {\n        ...rest,\n        children,\n        value: children,\n        onClick: (e) => handleItemClick(e, onClick),\n      });\n    });\n\n    if (strToFind.length > 0) {\n      childrenOpt = childrenOpt\n        .filter((opt) => (opt.props.children.toLowerCase().includes(strToFind.toLowerCase())));\n    }\n\n    return childrenOpt;\n  }\n\n  const handleExpand = (e) => {\n    setIsMenuClosed(!isMenuClosed);\n\n    const newState = {\n      dropDownItems: [],\n    };\n\n    if (isMenuClosed) {\n      newState.dropDownItems = getItems(e.target.value);\n      newState.errorMessage = '';\n    }\n\n    setState(prevState => ({\n      ...prevState,\n      ...newState,\n    }));\n  };\n\n  const iconToggle = (\n    <IconButton\n      className=\"pgn__form-autosuggest__icon-button\"\n      src={isMenuClosed ? KeyboardArrowDown : KeyboardArrowUp}\n      iconAs={Icon}\n      size=\"sm\"\n      variant=\"secondary\"\n      alt={isMenuClosed\n        ? intl.formatMessage(messages.iconButtonOpened)\n        : intl.formatMessage(messages.iconButtonClosed)}\n      onClick={(e) => handleExpand(e, isMenuClosed)}\n    />\n  );\n\n  const handleClickOutside = (e) => {\n    if (parentRef.current && !parentRef.current.contains(e.target) && state.dropDownItems.length > 0) {\n      setState(prevState => ({\n        ...prevState,\n        dropDownItems: [],\n        errorMessage: !state.displayValue ? errorMessageText : '',\n      }));\n\n      setIsMenuClosed(true);\n    }\n  };\n\n  const keyDownHandler = e => {\n    if (e.key === 'Escape') {\n      e.preventDefault();\n\n      setState(prevState => ({\n        ...prevState,\n        dropDownItems: [],\n        errorMessage: !state.displayValue ? errorMessageText : '',\n      }));\n\n      setIsMenuClosed(true);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', keyDownHandler);\n    document.addEventListener('click', handleClickOutside, true);\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside, true);\n      document.removeEventListener('keydown', keyDownHandler);\n    };\n  });\n\n  useEffect(() => {\n    if (value || value === '') {\n      setState(prevState => ({\n        ...prevState,\n        displayValue: value,\n      }));\n    }\n  }, [value]);\n\n  const setDisplayValue = (itemValue) => {\n    const optValue = [];\n\n    children.forEach(opt => {\n      optValue.push(opt.props.children);\n    });\n\n    const normalized = itemValue.toLowerCase();\n    const opt = optValue.find((o) => o.toLowerCase() === normalized);\n\n    setState(prevState => ({\n      ...prevState,\n      displayValue: opt || itemValue,\n    }));\n  };\n\n  const handleClick = (e) => {\n    const dropDownItems = getItems(e.target.value);\n\n    if (dropDownItems.length > 1) {\n      setState(prevState => ({\n        ...prevState,\n        dropDownItems,\n        errorMessage: '',\n      }));\n\n      setIsMenuClosed(false);\n    }\n  };\n\n  const handleOnChange = (e) => {\n    const findStr = e.target.value;\n\n    if (onChange) { onChange(findStr); }\n\n    if (findStr.length) {\n      const filteredItems = getItems(findStr);\n      setState(prevState => ({\n        ...prevState,\n        dropDownItems: filteredItems,\n        errorMessage: '',\n      }));\n\n      setIsMenuClosed(false);\n    } else {\n      setState(prevState => ({\n        ...prevState,\n        dropDownItems: [],\n        errorMessageText,\n      }));\n\n      setIsMenuClosed(true);\n    }\n\n    setDisplayValue(e.target.value);\n  };\n\n  return (\n    <div className=\"pgn__form-autosuggest__wrapper\" ref={parentRef}>\n      <FormGroup isInvalid={!!state.errorMessage}>\n        <FormControl\n          aria-expanded={(state.dropDownItems.length > 0).toString()}\n          aria-owns=\"pgn__form-autosuggest__dropdown-box\"\n          value={state.displayValue}\n          aria-invalid={state.errorMessage}\n          onChange={handleOnChange}\n          onClick={handleClick}\n          trailingElement={iconToggle}\n          {...props}\n        />\n\n        {helpMessage && !state.errorMessage && (\n          <FormControlFeedback type=\"default\">\n            {helpMessage}\n          </FormControlFeedback>\n        )}\n\n        {state.errorMessage && (\n          <FormControlFeedback type=\"invalid\" feedback-for={props.name}>\n            {errorMessageText}\n          </FormControlFeedback>\n        )}\n      </FormGroup>\n\n      <div\n        id=\"pgn__form-autosuggest__dropdown-box\"\n        className=\"pgn__form-autosuggest__dropdown\"\n      >\n        {isLoading ? (\n          <div className=\"pgn__form-autosuggest__dropdown-loading\">\n            <Spinner animation=\"border\" variant=\"dark\" screenReaderText={screenReaderText} />\n          </div>\n        ) : state.dropDownItems.length > 0 && state.dropDownItems}\n      </div>\n    </div>\n  );\n}\n\nFormAutosuggest.defaultProps = {\n  arrowKeyNavigationSelector: 'a:not(:disabled),button:not(:disabled, .btn-icon),input:not(:disabled)',\n  ignoredArrowKeysNames: ['ArrowRight', 'ArrowLeft'],\n  isLoading: false,\n  role: 'list',\n  className: null,\n  floatingLabel: null,\n  onChange: null,\n  onSelected: null,\n  helpMessage: '',\n  placeholder: '',\n  value: null,\n  errorMessageText: null,\n  readOnly: false,\n  children: null,\n  name: 'form-autosuggest',\n  screenReaderText: 'loading',\n};\n\nFormAutosuggest.propTypes = {\n  /**\n   * Specifies the CSS selector string that indicates to which elements\n   * the user can navigate using the arrow keys\n  */\n  arrowKeyNavigationSelector: PropTypes.string,\n  /** Specifies ignored hook keys. */\n  ignoredArrowKeysNames: PropTypes.arrayOf(PropTypes.string),\n  /** Specifies loading state. */\n  isLoading: PropTypes.bool,\n  /** An ARIA role describing the form autosuggest. */\n  role: PropTypes.string,\n  /** Specifies class name to append to the base element. */\n  className: PropTypes.string,\n  /** Specifies floating label to display for the input component. */\n  floatingLabel: PropTypes.string,\n  /** Specifies onChange event handler. */\n  onChange: PropTypes.func,\n  /** Specifies help information for the user. */\n  helpMessage: PropTypes.string,\n  /** Specifies the placeholder text for the input. */\n  placeholder: PropTypes.string,\n  /** Specifies values for the input. */\n  value: PropTypes.string,\n  /** Informs user has errors. */\n  errorMessageText: PropTypes.string,\n  /** Specifies the name of the base input element. */\n  name: PropTypes.string,\n  /** Selected list item is read-only. */\n  readOnly: PropTypes.bool,\n  /** Specifies the content of the `FormAutosuggest`. */\n  children: PropTypes.node,\n  /** Specifies the screen reader text */\n  screenReaderText: PropTypes.string,\n  /** Function that receives the selected value. */\n  onSelected: PropTypes.func,\n};\n\nexport default FormAutosuggest;\n"],"mappings":"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"}